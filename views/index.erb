<script src="openpgp.js"></script>
<form id="encrypt">
    <div class="row">
        <div class="form-group col-md-6">
            <label>Public Key</label>
            <textarea placeholder="Enter PGP private key here..." id="public-key" class="form-control"></textarea>
        </div>
        <div class="form-group col-md-6">
            <label>Message</label>
            <textarea id="message" class="form-control">(address goes here)</textarea>
        </div>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-success btn-lg btn-block" id="encrypt" value="Encrypt" />
        <input type="submit" class="btn btn-success btn-lg btn-block" id="encrypt" value="Decrypt" />
        
    </div>
    <div class="row">
        <div class="form-group col-md-4 text-center">
             <label>Private Key</label>
            <textarea placeholder="Enter PGP private key here..." id="public-key" class="form-control"></textarea>
        </div>
        <div class="form-group col-md-8">
            <label>Result</label>
            <textarea id="result" class="form-control"></textarea>
        </div>
</form>    
<a href="/hash">SHA256 hash of this page</a><br />
<a href="/openpgp">SHA256 hash of openpgp.js</a><br />
<a onclick="bookmark()">Bookmark this page</a><br />
<a href="http://hash.online-convert.com/sha256-generator">Check the SHA256 hash of this website</a><br />
<a href="https://github.com/unyo/webpgp">Fork me on Github</a>
<script>
    $('#encrypt').submit(function(e) {
        e.preventDefault();
        public_key = $('#public-key').val();
        message = $('#message').val();
        pubkey = openpgp.key.readArmored(public_key).keys[0];
        result = openpgp.encryptMessage([pubkey], message);
        $('#result').val(result);
    });
    $(function() {
        // restore the data via javascript
        // ask the server for the symmetric-key encrypted data
        // decrypt in the browser (2FA authentication optional)
        // apply the stored private key
        // apply the default message
        // apply the bitcoin address link (blockchain balance)
        // show the 2FA scan code upon request. resetting the
        // 2FA requires the existing 2FA first.
        // allow saving upon change
        // allow "burn data" option (set random new variables of at least the same length as the current data, and then delete from database)
    });
</script>